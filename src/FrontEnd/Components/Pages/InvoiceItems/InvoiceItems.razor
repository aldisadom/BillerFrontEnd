@page "/invoice_items"
@using Clients.Clients
@using Clients.Interfaces
@using Contracts.Responses.InvoiceItem

@inject IInvoiceItemClient _invoiceItemClient
@inject NavigationManager _navigationManager

@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Invoice items</PageTitle>
<div style="display: flex; align-items: center;">
    <h1>InvoiceItems</h1>    
    <div style="margin-left: 20px;">
        <button @onclick="AddClick">Add</button>
    </div>
</div>

@if (invoiceItemList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Id</th>                
            </tr>
        </thead>
        <tbody>
            @foreach (var invoiceItem in invoiceItemList.InvoiceItems)
            {
                <tr>                    
                    <td>@invoiceItem.Name</td>
                    <td>@invoiceItem.Price</td>
                    <th>@invoiceItem.Quantity</th>
                    <td>
                        <NavLink class="nav-link" href="@($"invoice_items/{invoiceItem.Id}")">
                            @invoiceItem.Id
                        </NavLink>
                    </td>
                    
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private InvoiceItemListResponse? invoiceItemList;

    protected override async Task OnInitializedAsync()
    {
        invoiceItemList = await _invoiceItemClient.Get();
    }

    private void AddClick()
    {
        _navigationManager.NavigateTo($"/invoice_items/add", false);
    }
}
