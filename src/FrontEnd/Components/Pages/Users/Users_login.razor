@page "/users/login"
@using Clients.Clients
@using Clients.Interfaces
@using Contracts.Requests.User
@using Contracts.Responses.User
@using Domain.Exceptions

@inject NavigationManager _navigationManager
@inject IUserClient _userClient

@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>User login</PageTitle>
<h1>Login</h1>

<b>Email:</b>
<br />
<input type="text" @bind="user!.Email" />
<br />
<b>Password:</b>
<br />
<input type="text" @bind="user.Password" />
<br />
<div style="margin-left: 20px;">
    <button @onclick="LoginClick">Login</button>
</div>
<br />
<div style="margin-left: 20px;">
    <button @onclick="CreateUserClick">Create user</button>
</div>

@code {
    private UserLoginRequest? user;

    protected override async Task OnInitializedAsync()
    {
        user = new();
    }

    private async Task LoginClick()
    {
        UserLoginResponse response = await _userClient.Login(user);
    }

    private void CreateUserClick()
    {
        _navigationManager.NavigateTo("/users/add", false);
    }
}
