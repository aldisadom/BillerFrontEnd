@page "/items/add"
@using Clients.Clients
@using Clients.Interfaces
@using Contracts.Requests.Item
@using Contracts.Responses
@using Contracts.Responses.Item
@using Domain.Exceptions

@inject NavigationManager _navigationManager
@inject IItemClient _itemClient

@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Item add</PageTitle>

<div style="display: flex; align-items: center;">
    <div style="margin-left: 20px;">
    <button @onclick="AddClick">Add</button>
    </div>      
</div>

<b>CustomerId:</b>
<br />
<input type="text" @bind="item.CustomerId" />
<br />
<b>Name:</b>
<br />
<input type="text" @bind="item.Name" />
<br />
<b>Price:</b>
<br />
<input type="number" step="0.01" @bind-value="item.Price" />
<br />
<b>Quantity:</b>
<br />
<input type="number" step="1" @bind-value="item.Quantity" />
<br />

@code {
    private ItemAddRequest item = new();

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async Task AddClick()
    {
        AddResponse response = await _itemClient.Add(item);
        await _itemClient.Get(response.Id);

        _navigationManager.NavigateTo($"/items/{response.Id}", false);
    }
}
